# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


GET         /                                             @controllers.HomeController.index
GET         /footer                                       @controllers.HomeController.footer
GET         /header                                       @controllers.HomeController.header
GET         /userProfile                                  @controllers.UserProfileController.getUserPage()

GET         /signIn                                       @controllers.AccountController.signIn(returnUrl:Option[String])
GET         /signOut                                      @controllers.AccountController.signOut
GET         /authenticate/:provider                       @controllers.SocialAuthController.authenticate(provider)
POST        /authenticate/credentials                     @controllers.CredentialsAuthController.authenticate

GET         /signup                                       @controllers.SignUpController.signUpRequest
POST        /signup                                       @controllers.SignUpController.signUpRequestRegistration
GET         /signup/:token                                @controllers.SignUpController.signUpCompletion(token)

GET         /reset                                        @controllers.PasswordChangeController.startResetPassword
POST        /reset                                        @controllers.PasswordChangeController.handleStartResetPassword
GET         /reset/:token                                 @controllers.PasswordChangeController.specifyResetPassword(token)
POST        /reset/                                       @controllers.PasswordChangeController.handleResetPassword

GET         /change                                       @controllers.PasswordChangeController.startChangePassword
POST        /change                                       @controllers.PasswordChangeController.handleChangePassword


#GET         /ajax/usertoken                       @controllers.AccountController.tokenRetrieve
POST        /annotation/save                              @controllers.AnnotationController.annotatePost
POST        /annotation/update                            @controllers.AnnotationController.updatePost
POST        /annotation/extractTags                       @controllers.AnnotationController.extractTags
POST        /comments/rate                                @controllers.AnnotationController.rateComment
GET         /comment/report/check/:commentId              @controllers.AnnotationController.checkIfUserHasReportedComment(commentId:Long)
POST        /comment/report                               @controllers.AnnotationController.reportComment
POST        /comment/reply/save                           @controllers.AnnotationController.saveReply
POST        /finallaw/annotate                            @controllers.AnnotationController.annotateFinalLaw
POST        /finallaw/annotate/update                     @controllers.AnnotationController.updateFinalLawAnnotation
GET         /finallaw/annotations/get                     @controllers.AnnotationController.getFinalLawAnnotationsForComment(commentId:Long, finalLawId:Long)
#GET         /search

GET         /consultation/reporter/:consultationId        @controllers.ConsultationController.getReporterPage(consultationId :Long)
GET         /consultation/search                          @controllers.ConsultationController.search(query:String ?="", ministryId:Option[Int] ?=None)
GET         /consultation/display-all                     @controllers.ConsultationController.displayAll()
GET         /consultation/:consultationId                 @controllers.ConsultationController.getConsultation(consultationId :Long)
GET         /comments/retrieve                            @controllers.ConsultationController.getComments(consultationId:Long, articleId:Long, source: String, discussionthreadid:Option[Int] ?= None, discussionthreadclientid:String, page:Option[Int] ?= None)
GET         /comments/cons/retrieve                       @controllers.ReporterController.getCommentsForConsultationByUserId(consultationId:Long, userId:java.util.UUID)
GET         /consultation/:consultationId                 @controllers.ConsultationController.getConsultation(consultationId :Long)
POST        /consultation/wordCloud/:consultationId       @controllers.ConsultationController.getConsultationWordCloud(consultationId :Long)
POST        /article/wordCloud/:articleId                 @controllers.ReporterController.getArticleWordCloud(articleId :Long)
GET         /comments/retrieve/forarticle/opengov         @controllers.ReporterController.getOpenGovCommentsByArticleId(articleId:Long)
GET         /comments/retrieve/forarticle/dit             @controllers.ReporterController.getDITCommentsByArticleId(articleId:Long)
GET         /comments/retrieve/byannid                    @controllers.ReporterController.getCommentsByAnnId(annId:Long, consultationId:Long)
GET         /comments/retrieve/byannid/perarticle         @controllers.ReporterController.getCommentsByAnnIdPerArticle(annId:Long, articleId:Long)
GET         /comments/cons/opengov/retrieve/csv/:consultationId       @controllers.ReporterController.getOpenGovCommentsCSV(consultationId:Long)
GET         /comments/cons/dit/retrieve/csv/:consultationId           @controllers.ReporterController.getDITCommentsCSV(consultationId:Long)
GET         /comments/cons/ann/retrieve/csv/:consultationId           @controllers.ReporterController.getAnnotationsForConsultationCSV(consultationId:Long)
GET         /comments/cons/problems/retrieve/csv/:consultationId      @controllers.ReporterController.getProblemsForConsultationCSV(consultationId:Long)
GET         /evaluation                                   @controllers.EvaluationController.getEvaluationPage()
GET         /evaluator/consflstats/                       @controllers.EvaluationController.getConsFinalLawStats()
GET         /evaluator/frequency/organization             @controllers.EvaluationController.getEvaluationPerOrganization()
GET         /evaluator/duration/organization              @controllers.EvaluationController.getConsDurationPerOrganization()
GET         /evaluator/duration/all                       @controllers.EvaluationController.getConsDuration()
GET         /evaluator/comments/organization              @controllers.EvaluationController.getConsCommPerOrganization()
POST        /evaluator/consultations/get                  @controllers.EvaluationController.getConsultations()
POST        /consultation/finalLawUpload/:consultationId/:userId                  @controllers.ConsultationController.uploadFinalLaw(consultationId: Long, userId:java.util.UUID)
POST        /consultation/finallaw/rate/:consultationId/:finallawid/:attitude/:userId/:liked     @controllers.ConsultationController.rateFinalLaw(userId:java.util.UUID, consultationId: Long, finallawid:Long, attitude: Int, liked:Boolean)
GET         /consultation/finallaw/delete/:finallawid/:userId     @controllers.ConsultationController.deleteFinalLaw(finallawid:Long, userId:java.util.UUID)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                 controllers.Assets.at(path="/public", file)
GET         /webjars/*file                                controllers.WebJarAssets.at(file)
